{"version":3,"file":"static/js/410.7133adea.chunk.js","mappings":"6LAAO,IAAMA,EAAU,gCACVC,EAAU,qN,kFCAvB,EAA8B,gCAA9B,EAA0E,8B,SCqB1E,EAlBmB,SAAC,GAAiB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACI,eAAIC,UAAWC,EAAf,SACKJ,EAAOK,KAAI,SAAAC,GAAK,OACb,eAAmBH,UAAWC,EAA9B,UACI,SAAC,KAAD,CACIG,GAAE,iBAAYD,EAAME,IACpBC,MAAO,CAAEC,KAAMT,GAFnB,SAIKK,EAAMK,SALNL,EAAME,GADF,KAY5B,C,8JC4DD,UAtEmB,WACf,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SA4CpC,OA9BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,uFACbH,EADa,wDAGlBJ,GAAW,GAHO,kBAMOQ,EAAAA,EAAAA,IAAA,UAAazB,EAAAA,EAAb,gBAAoC,CACzD0B,OAAQ,CAAEC,MAAON,GACjBO,QAAS,CACPC,cAAc,UAAD,OAAY5B,EAAAA,GACzB6B,OAAQ,sBAVI,UAcqB,KAR/BC,EANU,QAcHC,KAAKC,QAAQC,OAdV,sBAeR,IAAIC,MAAJ,0BAA6Bd,EAA7B,OAfQ,OAkBhBN,EAAUgB,EAASC,KAAKC,SAlBR,kDAoBhBG,EAAAA,GAAAA,MAAY,KAAMC,SApBF,yBAsBhBpB,GAAW,GAtBK,6EAAH,qDA0BjBO,GACD,GAAE,CAACH,KAGF,iBAAKhB,UAAWC,EAAAA,EAAAA,YAAhB,WACE,wBAAI,iBACJ,kBAAMgC,SA7CW,SAACC,GAClBA,EAAIC,iBACJ,IAAMC,EAAcF,EAAIG,OAAOC,SAASC,OAAOC,MAAMC,cAC3B,KAAvBL,EAAYM,OAIf3B,EAAgB,CACZO,MAAOc,IAJPL,EAAAA,GAAAA,MAAY,oCAMnB,EAmCG,WACI,kBACAY,KAAK,OACLC,KAAK,SACLC,YAAY,iBACZC,UAAQ,KAER,mBAAQH,KAAK,SAAb,SAAsB,cAGV,OAAf3B,IAAuB,SAAC,IAAD,CAAYnB,OAAQA,IAE3Cc,IAAW,SAAC,IAAD,KAEZ,SAAC,KAAD,CAAgBoC,UAAW,IAAMC,MAAM,WAG9C,C,oBC7ED,KAAgB,QAAU,wBAAwB,SAAW,yBAAyB,cAAgB,8BAA8B,cAAgB,8BAA8B,eAAiB,+BAA+B,YAAc,4BAA4B,UAAY,0BAA0B,aAAe,6BAA6B,aAAe,6BAA6B,YAAc,4B","sources":["API/API.js","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/SearchPage.jsx","webpack://goit-react-hw-05-movies/./src/Styles.module.css?b66a"],"sourcesContent":["export const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NWQzY2MzZDA1Nzk2OGE0YWJlZGY1MzVkOGNiZDIwMiIsInN1YiI6IjY0N2EzNjI3Y2FlZjJkMDExOWJmMDc3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Vnk9Mx4FCU9-aMju8ubwqMt0iiZWjWxQo-T3KlsNAWg';\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_list\":\"MoviesList_movies_list__EAcLe\",\"list_item\":\"MoviesList_list_item__WNhrl\"};","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styles from 'components/MoviesList/MoviesList.module.css'\n\nconst MoviesList = ( { movies }) => {\n    const location = useLocation();\n    return(\n        <ul className={styles.movies_list}>\n            {movies.map(movie => (\n                <li key={movie.id} className={styles.list_item}>\n                    <Link \n                        to={`/movie/${movie.id}`}\n                        state={{ from: location }}\n                    >\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default MoviesList;","import React, { useState, useEffect } from \"react\";\nimport { API_URL, API_KEY } from \"API/API\";\nimport axios from \"axios\";\nimport Loader from \"components/Loader/Loader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport styles from '../Styles.module.css'\n\nconst SearchPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchTerm = searchParams.get('query');\n\n    const hendleSubmit = (evt) => {\n        evt.preventDefault();\n        const searchValue = evt.target.children.search.value.toLowerCase();\n        if(searchValue.trim() === '') {\n            toast.error('Write key word for search images!')\n            return;\n        }\n        setSearchParams({\n            query: searchValue,\n        });\n    };\n  \n    useEffect(() => {\n      const fetchMovies = async () => {\n        if (!searchTerm) return;\n\n        setLoading(true);\n  \n        try {\n          const response = await axios.get(`${API_URL}search/movie`, {\n            params: { query: searchTerm },\n            headers: {\n              Authorization: `Bearer ${API_KEY}`,\n              accept: 'application/json',\n            },\n          });\n  \n          if (response.data.results.length === 0) {\n            throw new Error(`No results for \"${searchTerm}\".`);\n          }\n  \n          setMovies(response.data.results);\n        } catch (error) {\n          toast.error(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n  \n      fetchMovies();\n    }, [searchTerm]);\n\n    return (\n      <div className={styles.search_page}>\n        <h1>Search Page</h1>\n        <form onSubmit={hendleSubmit}>\n            <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Enter movie...\"\n            required\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n        \n        {searchTerm !== null && <MoviesList movies={movies} />}\n  \n        {loading && <Loader />}\n  \n        <ToastContainer autoClose={5000} theme=\"dark\" />\n      </div>\n    );\n};\n\nexport default SearchPage;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Styles_content__cwFxa\",\"back_btn\":\"Styles_back_btn__EIIr6\",\"movie_details\":\"Styles_movie_details__VMRN+\",\"movie_content\":\"Styles_movie_content__VxFJ0\",\"movie_overview\":\"Styles_movie_overview__fmqaw\",\"actors_list\":\"Styles_actors_list__D4Dvb\",\"list_item\":\"Styles_list_item__i-ukg\",\"movie_poster\":\"Styles_movie_poster__eiH84\",\"reviews_list\":\"Styles_reviews_list__XXAi3\",\"search_page\":\"Styles_search_page__8Byar\"};"],"names":["API_URL","API_KEY","movies","location","useLocation","className","styles","map","movie","to","id","state","from","title","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchTerm","get","useEffect","fetchMovies","axios","params","query","headers","Authorization","accept","response","data","results","length","Error","toast","message","onSubmit","evt","preventDefault","searchValue","target","children","search","value","toLowerCase","trim","type","name","placeholder","required","autoClose","theme"],"sourceRoot":""}